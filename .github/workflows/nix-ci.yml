name: Nix CI

on:
  workflow_dispatch: # allows manual triggering
    inputs:
      run_large_test:
        description: 'Run large VM test'
        required: false
        type: boolean
        default: false
  push: # on push to any branch
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  nix-build:
    runs-on: ubuntu-latest
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v9
      with:
        extra-conf: |
          experimental-features = ca-derivations impure-derivations
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set-up cachix to push the results to
      uses: cachix/cachix-action@v13
      with:
        authToken: '${{ secrets.CACHIX_TOKEN }}'
        name: laut
    - name: Build Packages
      id: build_packages
      run: |
          nix run github:Mic92/nix-fast-build -- \
          --no-nom \
          --skip-cached \
          --flake "github:${GITHUB_REPOSITORY}/${GITHUB_SHA}#packages.x86_64-linux"
    - name: Run small VM Test
      id: vm_test_small
      run: |
          nix run github:Mic92/nix-fast-build -- \
          --no-nom \
          --skip-cached \
          --flake "github:${GITHUB_REPOSITORY}/${GITHUB_SHA}#checks.x86_64-linux.small-sign"
          nix run github:Mic92/nix-fast-build -- \
          --no-nom \
          --skip-cached \
          --flake "github:${GITHUB_REPOSITORY}/${GITHUB_SHA}#checks.x86_64-linux.small-verify"
    - name: Run medium VM Test
      id: vm_test_medium
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/update_flake_lock_action' || github.event.inputs.run_large_test == 'true'
      run: |
          nix run github:Mic92/nix-fast-build -- \
          --no-nom \
          --flake "github:${GITHUB_REPOSITORY}/${GITHUB_SHA}#checks.x86_64-linux.medium-sign"
          nix run github:Mic92/nix-fast-build -- \
          --no-nom \
          --flake "github:${GITHUB_REPOSITORY}/${GITHUB_SHA}#checks.x86_64-linux.medium-verify"
