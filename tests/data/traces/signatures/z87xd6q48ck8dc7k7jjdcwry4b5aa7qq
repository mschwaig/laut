{
  "signatures": [
    "eyJhbGciOiJFZERTQSIsImNydiI6IkVkMjU1MTkiLCJkZXRhY2hIYXNoIjoibml4LWNhLXBhdGgiLCJraWQiOiJidWlsZGVyQTpiY2RhOGQ1NDQ3MGZlYTNiIiwidHlwIjoiSldUIiwidHlwZSI6ImxhdXQiLCJ2IjoiMiJ9.{"in":{"rdrv_json":"nCiNtCe1i3BKwT-r1cIyxc32L9h5yx9Btcbsdln1fcY","rdrv_aterm_ca":"z87xd6q48ck8dc7k7jjdcwry4b5aa7qq","debug":{"drv_name":"python3-minimal-3.12.9","rdrv_path":"/nix/store/z87xd6q48ck8dc7k7jjdcwry4b5aa7qq-python3-minimal-3.12.9.drv","rdrv_json_preimage":"{\"args\":[\"-e\",\"/nix/store/vj1c3wf9c11a0qs6p3ymfvrnsdgsdcbq-source-stdenv.sh\",\"/nix/store/shkw4qm9qcw5sc5n1k5jznc83ny02r39-default-builder.sh\"],\"builder\":\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools/bin/bash\",\"env\":{\"CPPFLAGS\":\"-I/nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev/include -I/nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev/include -I/nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev/include -I/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/include -I/nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev/include -I/nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev/include -I/nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev/include\",\"LDFLAGS\":\"-L/nix/store/8f7zfjkvfrp5l8flylyyjhbm94wp5dgg-bzip2-1.0.8/lib -L/nix/store/4qhk4i51kbl88jbiha7djk3ywr8w3fcv-expat-2.7.1/lib -L/nix/store/i2mmba1rmr6rajj294qzlxpga6s16a6f-libffi-3.4.7/lib -L/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/lib -L/nix/store/kk08kl7n9snabqm9anhcww5sy5qzc1pb-mpdecimal-4.0.0/lib -L/nix/store/jlxdwd6gv99hkbp3mghr3f6vlmmn0v0b-xz-5.8.1/lib -L/nix/store/2whfpca7gchlcwhfj0zscxzd409sybjc-zlib-1.3.1/lib\",\"LIBS\":\"-lcrypt\",\"NIX_LDFLAGS\":\"-lgcc_s\",\"PYTHONHASHSEED\":\"0\",\"__structuredAttrs\":\"\",\"buildInputs\":\"/nix/store/3nih7kbjqjsgwchcynipiz07631j0a63-bash-5.2p37-dev /nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev /nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev /nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 /nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev /nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev /nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev\",\"builder\":\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools/bin/bash\",\"cmakeFlags\":\"\",\"configureFlags\":\"--without-ensurepip --with-system-expat --with-system-libmpdec --enable-shared CFLAGS=-I/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/include LIBS=-L/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/lib ac_cv_func_lchmod=no\",\"debug\":\"/1k7af0a6abdk51bgf8idbn458a9b95n3lg3374g9cgssag6y8gd2\",\"depsBuildBuild\":\"\",\"depsBuildBuildPropagated\":\"\",\"depsBuildTarget\":\"\",\"depsBuildTargetPropagated\":\"\",\"depsHostHost\":\"\",\"depsHostHostPropagated\":\"\",\"depsTargetTarget\":\"\",\"depsTargetTargetPropagated\":\"\",\"disallowedReferences\":\"\",\"doCheck\":\"\",\"doInstallCheck\":\"\",\"enableParallelBuilding\":\"1\",\"enableParallelChecking\":\"1\",\"enableParallelInstalling\":\"1\",\"mesonFlags\":\"\",\"name\":\"python3-minimal-3.12.9\",\"nativeBuildInputs\":\"/nix/store/0fwq8v3mvdh4j3ii5d4ndjlxy0y89il6-nuke-references /nix/store/x669hj3g4di33377hxn2va52chya7hg8-autoconf-archive-2024.10.16 /nix/store/s4y4xdkghmzr3i7sk982yh7fhl1gl53c-autoreconf-hook /nix/store/v3mj6szqdzvny5rm0201kw40ls85pl3f-pkg-config-wrapper-0.29.2 /nix/store/47y241wqdhac3jm5l7nv0x4975mb1975-separate-debug-info.sh\",\"out\":\"/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9\",\"outputHashAlgo\":\"sha256\",\"outputHashMode\":\"recursive\",\"outputs\":\"out debug\",\"patches\":\"/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch /nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch /nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch\",\"pname\":\"python3-minimal\",\"postFixup\":\"# https://github.com/python/cpython/blob/e488e300f5c01289c10906c2e53a8e43d6de32d8/configure.ac#L78\\nsysconfigdataName=\\\"$(make --eval $'print-sysconfigdata-name:\\n\\\\t@echo _sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH) ' print-sysconfigdata-name)\\\"\\n\\n# The CPython interpreter contains a _sysconfigdata_<platform specific suffix>\\n# module that is imported by the sysconfig and distutils.sysconfig modules.\\n# The sysconfigdata module is generated at build time and contains settings\\n# required for building Python extension modules, such as include paths and\\n# other compiler flags. By default, the sysconfigdata module is loaded from\\n# the currently running interpreter (ie. the build platform interpreter), but\\n# when cross-compiling we want to load it from the host platform interpreter.\\n# This can be done using the _PYTHON_SYSCONFIGDATA_NAME environment variable.\\n# The _PYTHON_HOST_PLATFORM variable also needs to be set to get the correct\\n# platform suffix on extension modules. The correct values for these variables\\n# are not documented, and must be derived from the configure script (see links\\n# below).\\ncat <<EOF >> \\\"$out/nix-support/setup-hook\\\"\\nsysconfigdataHook() {\\n  if [ \\\"\\\\$1\\\" = '$out' ]; then\\n    export _PYTHON_HOST_PLATFORM='linux-x86_64'\\n    export _PYTHON_SYSCONFIGDATA_NAME='$sysconfigdataName'\\n  fi\\n}\\n\\naddEnvHooks \\\"\\\\$hostOffset\\\" sysconfigdataHook\\nEOF\\n\",\"postInstall\":\"# needed for some packages, especially packages that backport functionality\\n# to 2.x from 3.x\\nfor item in $out/lib/python3.12/test/*; do\\n  if [[ \\\"$item\\\" != */test_support.py*\\n     && \\\"$item\\\" != */test/support\\n     && \\\"$item\\\" != */test/libregrtest\\n     && \\\"$item\\\" != */test/regrtest.py* ]]; then\\n    rm -rf \\\"$item\\\"\\n  else\\n    echo $item\\n  fi\\ndone\\ntouch $out/lib/python3.12/test/__init__.py\\n\\n# Determinism: Windows installers were not deterministic.\\n# We're also not interested in building Windows installers.\\nfind \\\"$out\\\" -name 'wininst*.exe' | xargs -r rm -f\\n\\n# Use Python3 as default python\\nln -s \\\"$out/bin/idle3\\\" \\\"$out/bin/idle\\\"\\nln -s \\\"$out/bin/pydoc3\\\" \\\"$out/bin/pydoc\\\"\\nln -s \\\"$out/bin/python3\\\" \\\"$out/bin/python\\\"\\nln -s \\\"$out/bin/python3-config\\\" \\\"$out/bin/python-config\\\"\\nln -s \\\"$out/lib/pkgconfig/python3.pc\\\" \\\"$out/lib/pkgconfig/python.pc\\\"\\nln -sL \\\"$out/share/man/man1/python3.1.gz\\\" \\\"$out/share/man/man1/python.1.gz\\\"\\n\\n# Get rid of retained dependencies on -dev packages, and remove\\n# some $TMPDIR references to improve binary reproducibility.\\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\\nfor i in $out/lib/python3.12/_sysconfigdata*.py $out/lib/python3.12/config-312*/Makefile; do\\n   sed -i $i -e \\\"s|$TMPDIR|/no-such-path|g\\\"\\ndone\\n\\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 '{}' +\\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 '{}' +\\n\\n# Make the sysconfigdata module accessible on PYTHONPATH\\n# This allows build Python to import host Python's sysconfigdata\\nmkdir -p \\\"$out/lib/python3.12/site-packages\\\"\\nln -s \\\"$out/lib/python3.12/\\\"_sysconfigdata*.py \\\"$out/lib/python3.12/site-packages/\\\"\\nrm -R $out/bin/python*-config $out/lib/python*/config-*\\n# Strip IDLE (and turtledemo, which uses it)\\nrm -R $out/bin/idle* $out/lib/python*/{idlelib,turtledemo}\\nrm -R $out/lib/python*/tkinter\\n# Strip tests\\nrm -R $out/lib/python*/test $out/lib/python*/**/test{,s}\\n# Determinism: deterministic bytecode\\n# First we delete all old bytecode.\\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \\\"{}\\\"\\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\\n# interpretable by whatever python the gdb in question is using, which may\\n# not even match the major version of this python. doing this after the\\n# bytecode compilations for the same reason - we don't want bytecode generated.\\nmkdir -p $out/share/gdb\\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\\n\\n# Disable system-wide pip installation. See https://peps.python.org/pep-0668/.\\ncat <<'EXTERNALLY_MANAGED' > $out/lib/python3.12/EXTERNALLY-MANAGED\\n[externally-managed]\\nError=This command has been disabled as it tries to modify the immutable\\n `/nix/store` filesystem.\\n\\n To use Python with Nix and nixpkgs, have a look at the online documentation:\\n <https://nixos.org/manual/nixpkgs/stable/#python>.\\nEXTERNALLY_MANAGED\\n\",\"postPatch\":\"substituteInPlace Lib/subprocess.py \\\\\\n  --replace-fail \\\"'/bin/sh'\\\" \\\"'/nix/store/194dvh3j21mqqmjyb1n18ryz5nxrpdyg-bash-5.2p37/bin/sh'\\\"\\n\",\"preConfigure\":\"# Attempt to purify some of the host info collection\\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' config.guess\\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' configure\\n# Also override the auto-detection in `configure`.\\nsubstituteInPlace configure \\\\\\n  --replace-fail 'libmpdec_machine=universal' 'libmpdec_machine=x64'\\nexport CFLAGS_NODIST=\\\"-fno-semantic-interposition\\\"\\n\",\"preFixup\":\"\",\"prePatch\":\"\",\"propagatedBuildInputs\":\"\",\"propagatedNativeBuildInputs\":\"\",\"separateDebugInfo\":\"1\",\"setupHook\":\"/nix/store/awkhak3aji03f4b7zjwr8bvxpjmssk8z-python-setup-hook.sh\",\"src\":\"/nix/store/qs2mgbhxmvqwh5b8n14jc01z7a5yblw7-Python-3.12.9.tar.xz\",\"stdenv\":\"/nix/store/rklszg02jj66c50bdpawf1ipap5bkxkh-bootstrap-stage2-stdenv-linux\",\"strictDeps\":\"1\",\"system\":\"x86_64-linux\",\"version\":\"3.12.9\"},\"inputDrvs\":{},\"inputSrcs\":[\"/nix/store/0fwq8v3mvdh4j3ii5d4ndjlxy0y89il6-nuke-references\",\"/nix/store/194dvh3j21mqqmjyb1n18ryz5nxrpdyg-bash-5.2p37\",\"/nix/store/2whfpca7gchlcwhfj0zscxzd409sybjc-zlib-1.3.1\",\"/nix/store/3nih7kbjqjsgwchcynipiz07631j0a63-bash-5.2p37-dev\",\"/nix/store/47y241wqdhac3jm5l7nv0x4975mb1975-separate-debug-info.sh\",\"/nix/store/4qhk4i51kbl88jbiha7djk3ywr8w3fcv-expat-2.7.1\",\"/nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch\",\"/nix/store/8f7zfjkvfrp5l8flylyyjhbm94wp5dgg-bzip2-1.0.8\",\"/nix/store/awkhak3aji03f4b7zjwr8bvxpjmssk8z-python-setup-hook.sh\",\"/nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev\",\"/nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev\",\"/nix/store/i2mmba1rmr6rajj294qzlxpga6s16a6f-libffi-3.4.7\",\"/nix/store/jlxdwd6gv99hkbp3mghr3f6vlmmn0v0b-xz-5.8.1\",\"/nix/store/kk08kl7n9snabqm9anhcww5sy5qzc1pb-mpdecimal-4.0.0\",\"/nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev\",\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools\",\"/nix/store/qs2mgbhxmvqwh5b8n14jc01z7a5yblw7-Python-3.12.9.tar.xz\",\"/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38\",\"/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch\",\"/nix/store/rklszg02jj66c50bdpawf1ipap5bkxkh-bootstrap-stage2-stdenv-linux\",\"/nix/store/s4y4xdkghmzr3i7sk982yh7fhl1gl53c-autoreconf-hook\",\"/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch\",\"/nix/store/shkw4qm9qcw5sc5n1k5jznc83ny02r39-default-builder.sh\",\"/nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev\",\"/nix/store/v3mj6szqdzvny5rm0201kw40ls85pl3f-pkg-config-wrapper-0.29.2\",\"/nix/store/vj1c3wf9c11a0qs6p3ymfvrnsdgsdcbq-source-stdenv.sh\",\"/nix/store/x669hj3g4di33377hxn2va52chya7hg8-autoconf-archive-2024.10.16\",\"/nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev\",\"/nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev\"],\"name\":\"python3-minimal-3.12.9\",\"outputs\":{\"debug\":{\"hashAlgo\":\"sha256\",\"method\":\"nar\"},\"out\":{\"hashAlgo\":\"sha256\",\"method\":\"nar\"}},\"system\":\"x86_64-linux\"}","rdrv_computed_path":"/nix/store/z87xd6q48ck8dc7k7jjdcwry4b5aa7qq-python3-minimal-3.12.9.drv","rdrv_aterm_ca_preimage":"Derive([(\"debug\",\"\",\"r:sha256\",\"\"),(\"out\",\"\",\"r:sha256\",\"\")],[],[\"/nix/store/0fwq8v3mvdh4j3ii5d4ndjlxy0y89il6-nuke-references\",\"/nix/store/194dvh3j21mqqmjyb1n18ryz5nxrpdyg-bash-5.2p37\",\"/nix/store/2whfpca7gchlcwhfj0zscxzd409sybjc-zlib-1.3.1\",\"/nix/store/3nih7kbjqjsgwchcynipiz07631j0a63-bash-5.2p37-dev\",\"/nix/store/47y241wqdhac3jm5l7nv0x4975mb1975-separate-debug-info.sh\",\"/nix/store/4qhk4i51kbl88jbiha7djk3ywr8w3fcv-expat-2.7.1\",\"/nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch\",\"/nix/store/8f7zfjkvfrp5l8flylyyjhbm94wp5dgg-bzip2-1.0.8\",\"/nix/store/awkhak3aji03f4b7zjwr8bvxpjmssk8z-python-setup-hook.sh\",\"/nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev\",\"/nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev\",\"/nix/store/i2mmba1rmr6rajj294qzlxpga6s16a6f-libffi-3.4.7\",\"/nix/store/jlxdwd6gv99hkbp3mghr3f6vlmmn0v0b-xz-5.8.1\",\"/nix/store/kk08kl7n9snabqm9anhcww5sy5qzc1pb-mpdecimal-4.0.0\",\"/nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev\",\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools\",\"/nix/store/qs2mgbhxmvqwh5b8n14jc01z7a5yblw7-Python-3.12.9.tar.xz\",\"/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38\",\"/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch\",\"/nix/store/rklszg02jj66c50bdpawf1ipap5bkxkh-bootstrap-stage2-stdenv-linux\",\"/nix/store/s4y4xdkghmzr3i7sk982yh7fhl1gl53c-autoreconf-hook\",\"/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch\",\"/nix/store/shkw4qm9qcw5sc5n1k5jznc83ny02r39-default-builder.sh\",\"/nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev\",\"/nix/store/v3mj6szqdzvny5rm0201kw40ls85pl3f-pkg-config-wrapper-0.29.2\",\"/nix/store/vj1c3wf9c11a0qs6p3ymfvrnsdgsdcbq-source-stdenv.sh\",\"/nix/store/x669hj3g4di33377hxn2va52chya7hg8-autoconf-archive-2024.10.16\",\"/nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev\",\"/nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev\"],\"x86_64-linux\",\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools/bin/bash\",[\"-e\",\"/nix/store/vj1c3wf9c11a0qs6p3ymfvrnsdgsdcbq-source-stdenv.sh\",\"/nix/store/shkw4qm9qcw5sc5n1k5jznc83ny02r39-default-builder.sh\"],[(\"CPPFLAGS\",\"-I/nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev/include -I/nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev/include -I/nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev/include -I/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/include -I/nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev/include -I/nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev/include -I/nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev/include\"),(\"LDFLAGS\",\"-L/nix/store/8f7zfjkvfrp5l8flylyyjhbm94wp5dgg-bzip2-1.0.8/lib -L/nix/store/4qhk4i51kbl88jbiha7djk3ywr8w3fcv-expat-2.7.1/lib -L/nix/store/i2mmba1rmr6rajj294qzlxpga6s16a6f-libffi-3.4.7/lib -L/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/lib -L/nix/store/kk08kl7n9snabqm9anhcww5sy5qzc1pb-mpdecimal-4.0.0/lib -L/nix/store/jlxdwd6gv99hkbp3mghr3f6vlmmn0v0b-xz-5.8.1/lib -L/nix/store/2whfpca7gchlcwhfj0zscxzd409sybjc-zlib-1.3.1/lib\"),(\"LIBS\",\"-lcrypt\"),(\"NIX_LDFLAGS\",\"-lgcc_s\"),(\"PYTHONHASHSEED\",\"0\"),(\"__structuredAttrs\",\"\"),(\"buildInputs\",\"/nix/store/3nih7kbjqjsgwchcynipiz07631j0a63-bash-5.2p37-dev /nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev /nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev /nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 /nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev /nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev /nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev\"),(\"builder\",\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools/bin/bash\"),(\"cmakeFlags\",\"\"),(\"configureFlags\",\"--without-ensurepip --with-system-expat --with-system-libmpdec --enable-shared CFLAGS=-I/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/include LIBS=-L/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/lib ac_cv_func_lchmod=no\"),(\"debug\",\"/1k7af0a6abdk51bgf8idbn458a9b95n3lg3374g9cgssag6y8gd2\"),(\"depsBuildBuild\",\"\"),(\"depsBuildBuildPropagated\",\"\"),(\"depsBuildTarget\",\"\"),(\"depsBuildTargetPropagated\",\"\"),(\"depsHostHost\",\"\"),(\"depsHostHostPropagated\",\"\"),(\"depsTargetTarget\",\"\"),(\"depsTargetTargetPropagated\",\"\"),(\"disallowedReferences\",\"\"),(\"doCheck\",\"\"),(\"doInstallCheck\",\"\"),(\"enableParallelBuilding\",\"1\"),(\"enableParallelChecking\",\"1\"),(\"enableParallelInstalling\",\"1\"),(\"mesonFlags\",\"\"),(\"name\",\"python3-minimal-3.12.9\"),(\"nativeBuildInputs\",\"/nix/store/0fwq8v3mvdh4j3ii5d4ndjlxy0y89il6-nuke-references /nix/store/x669hj3g4di33377hxn2va52chya7hg8-autoconf-archive-2024.10.16 /nix/store/s4y4xdkghmzr3i7sk982yh7fhl1gl53c-autoreconf-hook /nix/store/v3mj6szqdzvny5rm0201kw40ls85pl3f-pkg-config-wrapper-0.29.2 /nix/store/47y241wqdhac3jm5l7nv0x4975mb1975-separate-debug-info.sh\"),(\"out\",\"/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9\"),(\"outputHashAlgo\",\"sha256\"),(\"outputHashMode\",\"recursive\"),(\"outputs\",\"out debug\"),(\"patches\",\"/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch /nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch /nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch\"),(\"pname\",\"python3-minimal\"),(\"postFixup\",\"# https://github.com/python/cpython/blob/e488e300f5c01289c10906c2e53a8e43d6de32d8/configure.ac#L78\\nsysconfigdataName=\\\"$(make --eval $'print-sysconfigdata-name:\\n\\\\t@echo _sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH) ' print-sysconfigdata-name)\\\"\\n\\n# The CPython interpreter contains a _sysconfigdata_<platform specific suffix>\\n# module that is imported by the sysconfig and distutils.sysconfig modules.\\n# The sysconfigdata module is generated at build time and contains settings\\n# required for building Python extension modules, such as include paths and\\n# other compiler flags. By default, the sysconfigdata module is loaded from\\n# the currently running interpreter (ie. the build platform interpreter), but\\n# when cross-compiling we want to load it from the host platform interpreter.\\n# This can be done using the _PYTHON_SYSCONFIGDATA_NAME environment variable.\\n# The _PYTHON_HOST_PLATFORM variable also needs to be set to get the correct\\n# platform suffix on extension modules. The correct values for these variables\\n# are not documented, and must be derived from the configure script (see links\\n# below).\\ncat <<EOF >> \\\"$out/nix-support/setup-hook\\\"\\nsysconfigdataHook() {\\n  if [ \\\"\\\\$1\\\" = '$out' ]; then\\n    export _PYTHON_HOST_PLATFORM='linux-x86_64'\\n    export _PYTHON_SYSCONFIGDATA_NAME='$sysconfigdataName'\\n  fi\\n}\\n\\naddEnvHooks \\\"\\\\$hostOffset\\\" sysconfigdataHook\\nEOF\\n\"),(\"postInstall\",\"# needed for some packages, especially packages that backport functionality\\n# to 2.x from 3.x\\nfor item in $out/lib/python3.12/test/*; do\\n  if [[ \\\"$item\\\" != */test_support.py*\\n     && \\\"$item\\\" != */test/support\\n     && \\\"$item\\\" != */test/libregrtest\\n     && \\\"$item\\\" != */test/regrtest.py* ]]; then\\n    rm -rf \\\"$item\\\"\\n  else\\n    echo $item\\n  fi\\ndone\\ntouch $out/lib/python3.12/test/__init__.py\\n\\n# Determinism: Windows installers were not deterministic.\\n# We're also not interested in building Windows installers.\\nfind \\\"$out\\\" -name 'wininst*.exe' | xargs -r rm -f\\n\\n# Use Python3 as default python\\nln -s \\\"$out/bin/idle3\\\" \\\"$out/bin/idle\\\"\\nln -s \\\"$out/bin/pydoc3\\\" \\\"$out/bin/pydoc\\\"\\nln -s \\\"$out/bin/python3\\\" \\\"$out/bin/python\\\"\\nln -s \\\"$out/bin/python3-config\\\" \\\"$out/bin/python-config\\\"\\nln -s \\\"$out/lib/pkgconfig/python3.pc\\\" \\\"$out/lib/pkgconfig/python.pc\\\"\\nln -sL \\\"$out/share/man/man1/python3.1.gz\\\" \\\"$out/share/man/man1/python.1.gz\\\"\\n\\n# Get rid of retained dependencies on -dev packages, and remove\\n# some $TMPDIR references to improve binary reproducibility.\\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\\nfor i in $out/lib/python3.12/_sysconfigdata*.py $out/lib/python3.12/config-312*/Makefile; do\\n   sed -i $i -e \\\"s|$TMPDIR|/no-such-path|g\\\"\\ndone\\n\\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 '{}' +\\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 '{}' +\\n\\n# Make the sysconfigdata module accessible on PYTHONPATH\\n# This allows build Python to import host Python's sysconfigdata\\nmkdir -p \\\"$out/lib/python3.12/site-packages\\\"\\nln -s \\\"$out/lib/python3.12/\\\"_sysconfigdata*.py \\\"$out/lib/python3.12/site-packages/\\\"\\nrm -R $out/bin/python*-config $out/lib/python*/config-*\\n# Strip IDLE (and turtledemo, which uses it)\\nrm -R $out/bin/idle* $out/lib/python*/{idlelib,turtledemo}\\nrm -R $out/lib/python*/tkinter\\n# Strip tests\\nrm -R $out/lib/python*/test $out/lib/python*/**/test{,s}\\n# Determinism: deterministic bytecode\\n# First we delete all old bytecode.\\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \\\"{}\\\"\\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\\n# interpretable by whatever python the gdb in question is using, which may\\n# not even match the major version of this python. doing this after the\\n# bytecode compilations for the same reason - we don't want bytecode generated.\\nmkdir -p $out/share/gdb\\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\\n\\n# Disable system-wide pip installation. See https://peps.python.org/pep-0668/.\\ncat <<'EXTERNALLY_MANAGED' > $out/lib/python3.12/EXTERNALLY-MANAGED\\n[externally-managed]\\nError=This command has been disabled as it tries to modify the immutable\\n `/nix/store` filesystem.\\n\\n To use Python with Nix and nixpkgs, have a look at the online documentation:\\n <https://nixos.org/manual/nixpkgs/stable/#python>.\\nEXTERNALLY_MANAGED\\n\"),(\"postPatch\",\"substituteInPlace Lib/subprocess.py \\\\\\n  --replace-fail \\\"'/bin/sh'\\\" \\\"'/nix/store/194dvh3j21mqqmjyb1n18ryz5nxrpdyg-bash-5.2p37/bin/sh'\\\"\\n\"),(\"preConfigure\",\"# Attempt to purify some of the host info collection\\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' config.guess\\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' configure\\n# Also override the auto-detection in `configure`.\\nsubstituteInPlace configure \\\\\\n  --replace-fail 'libmpdec_machine=universal' 'libmpdec_machine=x64'\\nexport CFLAGS_NODIST=\\\"-fno-semantic-interposition\\\"\\n\"),(\"preFixup\",\"\"),(\"prePatch\",\"\"),(\"propagatedBuildInputs\",\"\"),(\"propagatedNativeBuildInputs\",\"\"),(\"separateDebugInfo\",\"1\"),(\"setupHook\",\"/nix/store/awkhak3aji03f4b7zjwr8bvxpjmssk8z-python-setup-hook.sh\"),(\"src\",\"/nix/store/qs2mgbhxmvqwh5b8n14jc01z7a5yblw7-Python-3.12.9.tar.xz\"),(\"stdenv\",\"/nix/store/rklszg02jj66c50bdpawf1ipap5bkxkh-bootstrap-stage2-stdenv-linux\"),(\"strictDeps\",\"1\"),(\"system\",\"x86_64-linux\"),(\"version\",\"3.12.9\")])"}},"out":{"castore-entry":{"debug":"CiUSIJX3l2ETaiOm6CJlaRKjXqc6jG0gGYQi9cCJIp2UXJoQGJoD","out":"CiUSIO0YWpOZuHekre4B9u6kWxL0e1mEpMNZGyLTWN67mZ0nGJgP"},"nix":{"debug":{"hashAlgo":"sha256","method":"nar","path":"/nix/store/rb1c32dwc5lar4qijjkacbr3ynyv6z1r-python3-minimal-3.12.9-debug","hash":"sha256:0hcg08z1692gsvihccwyc4vikxmb78n62w1i9c1jxwpy3nqwr7zw"},"out":{"hashAlgo":"sha256","method":"nar","path":"/nix/store/m5590lsq9dnqdvb771ja6wa72cnpcmnn-python3-minimal-3.12.9","hash":"sha256:1qq6dx2jz3g96g04hzf3kvj3hyh56vmf5ki6dwpcdlcr8paq1ybr"}}},"builder":{"rebuild_id":633914110,"store_root":"/nix/store","nix_flavor":"nix","nix_version":"2.28.3"}}.dOmFABICQCk0QXr8U0HbCpC5cf2e_YLLBCnxtRLbO0uoHR93GbeD_tfUFSJ6Jmd3u1MWDTmR4QYRqgp1uUQPCg",
    "eyJhbGciOiJFZERTQSIsImNydiI6IkVkMjU1MTkiLCJkZXRhY2hIYXNoIjoibml4LWNhLXBhdGgiLCJraWQiOiJidWlsZGVyQjpkOTc4MDE3OWQ3MjM5ZDUxIiwidHlwIjoiSldUIiwidHlwZSI6ImxhdXQiLCJ2IjoiMiJ9.{"in":{"rdrv_json":"_zVZRBT47cJktgg9Yu2hy3dN4okt30ZPJtPjqllUQ5c","rdrv_aterm_ca":"z87xd6q48ck8dc7k7jjdcwry4b5aa7qq","debug":{"drv_name":"python3-minimal-3.12.9","rdrv_path":"/nix/store/z87xd6q48ck8dc7k7jjdcwry4b5aa7qq-python3-minimal-3.12.9.drv","rdrv_json_preimage":"{\"args\":[\"-e\",\"/nix/store/vj1c3wf9c11a0qs6p3ymfvrnsdgsdcbq-source-stdenv.sh\",\"/nix/store/shkw4qm9qcw5sc5n1k5jznc83ny02r39-default-builder.sh\"],\"builder\":\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools/bin/bash\",\"env\":{\"CPPFLAGS\":\"-I/nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev/include -I/nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev/include -I/nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev/include -I/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/include -I/nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev/include -I/nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev/include -I/nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev/include\",\"LDFLAGS\":\"-L/nix/store/8f7zfjkvfrp5l8flylyyjhbm94wp5dgg-bzip2-1.0.8/lib -L/nix/store/4qhk4i51kbl88jbiha7djk3ywr8w3fcv-expat-2.7.1/lib -L/nix/store/i2mmba1rmr6rajj294qzlxpga6s16a6f-libffi-3.4.7/lib -L/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/lib -L/nix/store/kk08kl7n9snabqm9anhcww5sy5qzc1pb-mpdecimal-4.0.0/lib -L/nix/store/jlxdwd6gv99hkbp3mghr3f6vlmmn0v0b-xz-5.8.1/lib -L/nix/store/2whfpca7gchlcwhfj0zscxzd409sybjc-zlib-1.3.1/lib\",\"LIBS\":\"-lcrypt\",\"NIX_LDFLAGS\":\"-lgcc_s\",\"PYTHONHASHSEED\":\"0\",\"__structuredAttrs\":\"\",\"buildInputs\":\"/nix/store/3nih7kbjqjsgwchcynipiz07631j0a63-bash-5.2p37-dev /nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev /nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev /nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 /nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev /nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev /nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev\",\"builder\":\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools/bin/bash\",\"cmakeFlags\":\"\",\"configureFlags\":\"--without-ensurepip --with-system-expat --with-system-libmpdec --enable-shared CFLAGS=-I/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/include LIBS=-L/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/lib ac_cv_func_lchmod=no\",\"debug\":\"/1k7af0a6abdk51bgf8idbn458a9b95n3lg3374g9cgssag6y8gd2\",\"depsBuildBuild\":\"\",\"depsBuildBuildPropagated\":\"\",\"depsBuildTarget\":\"\",\"depsBuildTargetPropagated\":\"\",\"depsHostHost\":\"\",\"depsHostHostPropagated\":\"\",\"depsTargetTarget\":\"\",\"depsTargetTargetPropagated\":\"\",\"disallowedReferences\":\"\",\"doCheck\":\"\",\"doInstallCheck\":\"\",\"enableParallelBuilding\":\"1\",\"enableParallelChecking\":\"1\",\"enableParallelInstalling\":\"1\",\"mesonFlags\":\"\",\"name\":\"python3-minimal-3.12.9\",\"nativeBuildInputs\":\"/nix/store/0fwq8v3mvdh4j3ii5d4ndjlxy0y89il6-nuke-references /nix/store/x669hj3g4di33377hxn2va52chya7hg8-autoconf-archive-2024.10.16 /nix/store/s4y4xdkghmzr3i7sk982yh7fhl1gl53c-autoreconf-hook /nix/store/v3mj6szqdzvny5rm0201kw40ls85pl3f-pkg-config-wrapper-0.29.2 /nix/store/47y241wqdhac3jm5l7nv0x4975mb1975-separate-debug-info.sh\",\"out\":\"/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9\",\"outputHashAlgo\":\"sha256\",\"outputHashMode\":\"recursive\",\"outputs\":\"out debug\",\"patches\":\"/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch /nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch /nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch\",\"pname\":\"python3-minimal\",\"postFixup\":\"# https://github.com/python/cpython/blob/e488e300f5c01289c10906c2e53a8e43d6de32d8/configure.ac#L78\\nsysconfigdataName=\\\"$(make --eval $'print-sysconfigdata-name:\\n\\\\t@echo _sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH) ' print-sysconfigdata-name)\\\"\\n\\n# The CPython interpreter contains a _sysconfigdata_<platform specific suffix>\\n# module that is imported by the sysconfig and distutils.sysconfig modules.\\n# The sysconfigdata module is generated at build time and contains settings\\n# required for building Python extension modules, such as include paths and\\n# other compiler flags. By default, the sysconfigdata module is loaded from\\n# the currently running interpreter (ie. the build platform interpreter), but\\n# when cross-compiling we want to load it from the host platform interpreter.\\n# This can be done using the _PYTHON_SYSCONFIGDATA_NAME environment variable.\\n# The _PYTHON_HOST_PLATFORM variable also needs to be set to get the correct\\n# platform suffix on extension modules. The correct values for these variables\\n# are not documented, and must be derived from the configure script (see links\\n# below).\\ncat <<EOF >> \\\"$out/nix-support/setup-hook\\\"\\nsysconfigdataHook() {\\n  if [ \\\"\\\\$1\\\" = '$out' ]; then\\n    export _PYTHON_HOST_PLATFORM='linux-x86_64'\\n    export _PYTHON_SYSCONFIGDATA_NAME='$sysconfigdataName'\\n  fi\\n}\\n\\naddEnvHooks \\\"\\\\$hostOffset\\\" sysconfigdataHook\\nEOF\\n\",\"postInstall\":\"# needed for some packages, especially packages that backport functionality\\n# to 2.x from 3.x\\nfor item in $out/lib/python3.12/test/*; do\\n  if [[ \\\"$item\\\" != */test_support.py*\\n     && \\\"$item\\\" != */test/support\\n     && \\\"$item\\\" != */test/libregrtest\\n     && \\\"$item\\\" != */test/regrtest.py* ]]; then\\n    rm -rf \\\"$item\\\"\\n  else\\n    echo $item\\n  fi\\ndone\\ntouch $out/lib/python3.12/test/__init__.py\\n\\n# Determinism: Windows installers were not deterministic.\\n# We're also not interested in building Windows installers.\\nfind \\\"$out\\\" -name 'wininst*.exe' | xargs -r rm -f\\n\\n# Use Python3 as default python\\nln -s \\\"$out/bin/idle3\\\" \\\"$out/bin/idle\\\"\\nln -s \\\"$out/bin/pydoc3\\\" \\\"$out/bin/pydoc\\\"\\nln -s \\\"$out/bin/python3\\\" \\\"$out/bin/python\\\"\\nln -s \\\"$out/bin/python3-config\\\" \\\"$out/bin/python-config\\\"\\nln -s \\\"$out/lib/pkgconfig/python3.pc\\\" \\\"$out/lib/pkgconfig/python.pc\\\"\\nln -sL \\\"$out/share/man/man1/python3.1.gz\\\" \\\"$out/share/man/man1/python.1.gz\\\"\\n\\n# Get rid of retained dependencies on -dev packages, and remove\\n# some $TMPDIR references to improve binary reproducibility.\\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\\nfor i in $out/lib/python3.12/_sysconfigdata*.py $out/lib/python3.12/config-312*/Makefile; do\\n   sed -i $i -e \\\"s|$TMPDIR|/no-such-path|g\\\"\\ndone\\n\\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 '{}' +\\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 '{}' +\\n\\n# Make the sysconfigdata module accessible on PYTHONPATH\\n# This allows build Python to import host Python's sysconfigdata\\nmkdir -p \\\"$out/lib/python3.12/site-packages\\\"\\nln -s \\\"$out/lib/python3.12/\\\"_sysconfigdata*.py \\\"$out/lib/python3.12/site-packages/\\\"\\nrm -R $out/bin/python*-config $out/lib/python*/config-*\\n# Strip IDLE (and turtledemo, which uses it)\\nrm -R $out/bin/idle* $out/lib/python*/{idlelib,turtledemo}\\nrm -R $out/lib/python*/tkinter\\n# Strip tests\\nrm -R $out/lib/python*/test $out/lib/python*/**/test{,s}\\n# Determinism: deterministic bytecode\\n# First we delete all old bytecode.\\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \\\"{}\\\"\\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\\n# interpretable by whatever python the gdb in question is using, which may\\n# not even match the major version of this python. doing this after the\\n# bytecode compilations for the same reason - we don't want bytecode generated.\\nmkdir -p $out/share/gdb\\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\\n\\n# Disable system-wide pip installation. See https://peps.python.org/pep-0668/.\\ncat <<'EXTERNALLY_MANAGED' > $out/lib/python3.12/EXTERNALLY-MANAGED\\n[externally-managed]\\nError=This command has been disabled as it tries to modify the immutable\\n `/nix/store` filesystem.\\n\\n To use Python with Nix and nixpkgs, have a look at the online documentation:\\n <https://nixos.org/manual/nixpkgs/stable/#python>.\\nEXTERNALLY_MANAGED\\n\",\"postPatch\":\"substituteInPlace Lib/subprocess.py \\\\\\n  --replace-fail \\\"'/bin/sh'\\\" \\\"'/nix/store/194dvh3j21mqqmjyb1n18ryz5nxrpdyg-bash-5.2p37/bin/sh'\\\"\\n\",\"preConfigure\":\"# Attempt to purify some of the host info collection\\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' config.guess\\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' configure\\n# Also override the auto-detection in `configure`.\\nsubstituteInPlace configure \\\\\\n  --replace-fail 'libmpdec_machine=universal' 'libmpdec_machine=x64'\\nexport CFLAGS_NODIST=\\\"-fno-semantic-interposition\\\"\\n\",\"preFixup\":\"\",\"prePatch\":\"\",\"propagatedBuildInputs\":\"\",\"propagatedNativeBuildInputs\":\"\",\"separateDebugInfo\":\"1\",\"setupHook\":\"/nix/store/awkhak3aji03f4b7zjwr8bvxpjmssk8z-python-setup-hook.sh\",\"src\":\"/nix/store/qs2mgbhxmvqwh5b8n14jc01z7a5yblw7-Python-3.12.9.tar.xz\",\"stdenv\":\"/nix/store/rklszg02jj66c50bdpawf1ipap5bkxkh-bootstrap-stage2-stdenv-linux\",\"strictDeps\":\"1\",\"system\":\"x86_64-linux\",\"version\":\"3.12.9\"},\"inputDrvs\":{},\"inputSrcs\":[\"/nix/store/0fwq8v3mvdh4j3ii5d4ndjlxy0y89il6-nuke-references\",\"/nix/store/194dvh3j21mqqmjyb1n18ryz5nxrpdyg-bash-5.2p37\",\"/nix/store/2whfpca7gchlcwhfj0zscxzd409sybjc-zlib-1.3.1\",\"/nix/store/3nih7kbjqjsgwchcynipiz07631j0a63-bash-5.2p37-dev\",\"/nix/store/47y241wqdhac3jm5l7nv0x4975mb1975-separate-debug-info.sh\",\"/nix/store/4qhk4i51kbl88jbiha7djk3ywr8w3fcv-expat-2.7.1\",\"/nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch\",\"/nix/store/8f7zfjkvfrp5l8flylyyjhbm94wp5dgg-bzip2-1.0.8\",\"/nix/store/awkhak3aji03f4b7zjwr8bvxpjmssk8z-python-setup-hook.sh\",\"/nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev\",\"/nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev\",\"/nix/store/i2mmba1rmr6rajj294qzlxpga6s16a6f-libffi-3.4.7\",\"/nix/store/jlxdwd6gv99hkbp3mghr3f6vlmmn0v0b-xz-5.8.1\",\"/nix/store/kk08kl7n9snabqm9anhcww5sy5qzc1pb-mpdecimal-4.0.0\",\"/nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev\",\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools\",\"/nix/store/qs2mgbhxmvqwh5b8n14jc01z7a5yblw7-Python-3.12.9.tar.xz\",\"/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38\",\"/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch\",\"/nix/store/rklszg02jj66c50bdpawf1ipap5bkxkh-bootstrap-stage2-stdenv-linux\",\"/nix/store/s4y4xdkghmzr3i7sk982yh7fhl1gl53c-autoreconf-hook\",\"/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch\",\"/nix/store/shkw4qm9qcw5sc5n1k5jznc83ny02r39-default-builder.sh\",\"/nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev\",\"/nix/store/v3mj6szqdzvny5rm0201kw40ls85pl3f-pkg-config-wrapper-0.29.2\",\"/nix/store/vj1c3wf9c11a0qs6p3ymfvrnsdgsdcbq-source-stdenv.sh\",\"/nix/store/x669hj3g4di33377hxn2va52chya7hg8-autoconf-archive-2024.10.16\",\"/nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev\",\"/nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev\"],\"name\":\"python3-minimal-3.12.9\",\"outputs\":{\"debug\":{\"hashAlgo\":\"r:sha256\"},\"out\":{\"hashAlgo\":\"r:sha256\"}},\"system\":\"x86_64-linux\"}","rdrv_computed_path":"/nix/store/z87xd6q48ck8dc7k7jjdcwry4b5aa7qq-python3-minimal-3.12.9.drv","rdrv_aterm_ca_preimage":"Derive([(\"debug\",\"\",\"r:sha256\",\"\"),(\"out\",\"\",\"r:sha256\",\"\")],[],[\"/nix/store/0fwq8v3mvdh4j3ii5d4ndjlxy0y89il6-nuke-references\",\"/nix/store/194dvh3j21mqqmjyb1n18ryz5nxrpdyg-bash-5.2p37\",\"/nix/store/2whfpca7gchlcwhfj0zscxzd409sybjc-zlib-1.3.1\",\"/nix/store/3nih7kbjqjsgwchcynipiz07631j0a63-bash-5.2p37-dev\",\"/nix/store/47y241wqdhac3jm5l7nv0x4975mb1975-separate-debug-info.sh\",\"/nix/store/4qhk4i51kbl88jbiha7djk3ywr8w3fcv-expat-2.7.1\",\"/nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch\",\"/nix/store/8f7zfjkvfrp5l8flylyyjhbm94wp5dgg-bzip2-1.0.8\",\"/nix/store/awkhak3aji03f4b7zjwr8bvxpjmssk8z-python-setup-hook.sh\",\"/nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev\",\"/nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev\",\"/nix/store/i2mmba1rmr6rajj294qzlxpga6s16a6f-libffi-3.4.7\",\"/nix/store/jlxdwd6gv99hkbp3mghr3f6vlmmn0v0b-xz-5.8.1\",\"/nix/store/kk08kl7n9snabqm9anhcww5sy5qzc1pb-mpdecimal-4.0.0\",\"/nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev\",\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools\",\"/nix/store/qs2mgbhxmvqwh5b8n14jc01z7a5yblw7-Python-3.12.9.tar.xz\",\"/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38\",\"/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch\",\"/nix/store/rklszg02jj66c50bdpawf1ipap5bkxkh-bootstrap-stage2-stdenv-linux\",\"/nix/store/s4y4xdkghmzr3i7sk982yh7fhl1gl53c-autoreconf-hook\",\"/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch\",\"/nix/store/shkw4qm9qcw5sc5n1k5jznc83ny02r39-default-builder.sh\",\"/nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev\",\"/nix/store/v3mj6szqdzvny5rm0201kw40ls85pl3f-pkg-config-wrapper-0.29.2\",\"/nix/store/vj1c3wf9c11a0qs6p3ymfvrnsdgsdcbq-source-stdenv.sh\",\"/nix/store/x669hj3g4di33377hxn2va52chya7hg8-autoconf-archive-2024.10.16\",\"/nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev\",\"/nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev\"],\"x86_64-linux\",\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools/bin/bash\",[\"-e\",\"/nix/store/vj1c3wf9c11a0qs6p3ymfvrnsdgsdcbq-source-stdenv.sh\",\"/nix/store/shkw4qm9qcw5sc5n1k5jznc83ny02r39-default-builder.sh\"],[(\"CPPFLAGS\",\"-I/nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev/include -I/nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev/include -I/nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev/include -I/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/include -I/nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev/include -I/nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev/include -I/nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev/include\"),(\"LDFLAGS\",\"-L/nix/store/8f7zfjkvfrp5l8flylyyjhbm94wp5dgg-bzip2-1.0.8/lib -L/nix/store/4qhk4i51kbl88jbiha7djk3ywr8w3fcv-expat-2.7.1/lib -L/nix/store/i2mmba1rmr6rajj294qzlxpga6s16a6f-libffi-3.4.7/lib -L/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/lib -L/nix/store/kk08kl7n9snabqm9anhcww5sy5qzc1pb-mpdecimal-4.0.0/lib -L/nix/store/jlxdwd6gv99hkbp3mghr3f6vlmmn0v0b-xz-5.8.1/lib -L/nix/store/2whfpca7gchlcwhfj0zscxzd409sybjc-zlib-1.3.1/lib\"),(\"LIBS\",\"-lcrypt\"),(\"NIX_LDFLAGS\",\"-lgcc_s\"),(\"PYTHONHASHSEED\",\"0\"),(\"__structuredAttrs\",\"\"),(\"buildInputs\",\"/nix/store/3nih7kbjqjsgwchcynipiz07631j0a63-bash-5.2p37-dev /nix/store/azrbh4gqhrq3cx33dmbpwjdy3h1aclf0-bzip2-1.0.8-dev /nix/store/c1zylnq0waj0254sk554994ymnmxzg1m-expat-2.7.1-dev /nix/store/y2van2nqalpsjnjaixiid041r6bcw1xl-libffi-3.4.7-dev /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 /nix/store/ygwcbhnxravnhjna48yalr2dyl8s2f22-mpdecimal-4.0.0-dev /nix/store/l58hbmi90yz85p1m86qqb7vggd72rwr5-xz-5.8.1-dev /nix/store/sq4a5k9jarrpgz22w61q0w2lla56bg6z-zlib-1.3.1-dev\"),(\"builder\",\"/nix/store/n7cxavpfzzz2pb1a71fg5hy1mqf1xlf2-bootstrap-tools/bin/bash\"),(\"cmakeFlags\",\"\"),(\"configureFlags\",\"--without-ensurepip --with-system-expat --with-system-libmpdec --enable-shared CFLAGS=-I/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/include LIBS=-L/nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38/lib ac_cv_func_lchmod=no\"),(\"debug\",\"/1k7af0a6abdk51bgf8idbn458a9b95n3lg3374g9cgssag6y8gd2\"),(\"depsBuildBuild\",\"\"),(\"depsBuildBuildPropagated\",\"\"),(\"depsBuildTarget\",\"\"),(\"depsBuildTargetPropagated\",\"\"),(\"depsHostHost\",\"\"),(\"depsHostHostPropagated\",\"\"),(\"depsTargetTarget\",\"\"),(\"depsTargetTargetPropagated\",\"\"),(\"disallowedReferences\",\"\"),(\"doCheck\",\"\"),(\"doInstallCheck\",\"\"),(\"enableParallelBuilding\",\"1\"),(\"enableParallelChecking\",\"1\"),(\"enableParallelInstalling\",\"1\"),(\"mesonFlags\",\"\"),(\"name\",\"python3-minimal-3.12.9\"),(\"nativeBuildInputs\",\"/nix/store/0fwq8v3mvdh4j3ii5d4ndjlxy0y89il6-nuke-references /nix/store/x669hj3g4di33377hxn2va52chya7hg8-autoconf-archive-2024.10.16 /nix/store/s4y4xdkghmzr3i7sk982yh7fhl1gl53c-autoreconf-hook /nix/store/v3mj6szqdzvny5rm0201kw40ls85pl3f-pkg-config-wrapper-0.29.2 /nix/store/47y241wqdhac3jm5l7nv0x4975mb1975-separate-debug-info.sh\"),(\"out\",\"/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9\"),(\"outputHashAlgo\",\"sha256\"),(\"outputHashMode\",\"recursive\"),(\"outputs\",\"out debug\"),(\"patches\",\"/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch /nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch /nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch\"),(\"pname\",\"python3-minimal\"),(\"postFixup\",\"# https://github.com/python/cpython/blob/e488e300f5c01289c10906c2e53a8e43d6de32d8/configure.ac#L78\\nsysconfigdataName=\\\"$(make --eval $'print-sysconfigdata-name:\\n\\\\t@echo _sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH) ' print-sysconfigdata-name)\\\"\\n\\n# The CPython interpreter contains a _sysconfigdata_<platform specific suffix>\\n# module that is imported by the sysconfig and distutils.sysconfig modules.\\n# The sysconfigdata module is generated at build time and contains settings\\n# required for building Python extension modules, such as include paths and\\n# other compiler flags. By default, the sysconfigdata module is loaded from\\n# the currently running interpreter (ie. the build platform interpreter), but\\n# when cross-compiling we want to load it from the host platform interpreter.\\n# This can be done using the _PYTHON_SYSCONFIGDATA_NAME environment variable.\\n# The _PYTHON_HOST_PLATFORM variable also needs to be set to get the correct\\n# platform suffix on extension modules. The correct values for these variables\\n# are not documented, and must be derived from the configure script (see links\\n# below).\\ncat <<EOF >> \\\"$out/nix-support/setup-hook\\\"\\nsysconfigdataHook() {\\n  if [ \\\"\\\\$1\\\" = '$out' ]; then\\n    export _PYTHON_HOST_PLATFORM='linux-x86_64'\\n    export _PYTHON_SYSCONFIGDATA_NAME='$sysconfigdataName'\\n  fi\\n}\\n\\naddEnvHooks \\\"\\\\$hostOffset\\\" sysconfigdataHook\\nEOF\\n\"),(\"postInstall\",\"# needed for some packages, especially packages that backport functionality\\n# to 2.x from 3.x\\nfor item in $out/lib/python3.12/test/*; do\\n  if [[ \\\"$item\\\" != */test_support.py*\\n     && \\\"$item\\\" != */test/support\\n     && \\\"$item\\\" != */test/libregrtest\\n     && \\\"$item\\\" != */test/regrtest.py* ]]; then\\n    rm -rf \\\"$item\\\"\\n  else\\n    echo $item\\n  fi\\ndone\\ntouch $out/lib/python3.12/test/__init__.py\\n\\n# Determinism: Windows installers were not deterministic.\\n# We're also not interested in building Windows installers.\\nfind \\\"$out\\\" -name 'wininst*.exe' | xargs -r rm -f\\n\\n# Use Python3 as default python\\nln -s \\\"$out/bin/idle3\\\" \\\"$out/bin/idle\\\"\\nln -s \\\"$out/bin/pydoc3\\\" \\\"$out/bin/pydoc\\\"\\nln -s \\\"$out/bin/python3\\\" \\\"$out/bin/python\\\"\\nln -s \\\"$out/bin/python3-config\\\" \\\"$out/bin/python-config\\\"\\nln -s \\\"$out/lib/pkgconfig/python3.pc\\\" \\\"$out/lib/pkgconfig/python.pc\\\"\\nln -sL \\\"$out/share/man/man1/python3.1.gz\\\" \\\"$out/share/man/man1/python.1.gz\\\"\\n\\n# Get rid of retained dependencies on -dev packages, and remove\\n# some $TMPDIR references to improve binary reproducibility.\\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\\nfor i in $out/lib/python3.12/_sysconfigdata*.py $out/lib/python3.12/config-312*/Makefile; do\\n   sed -i $i -e \\\"s|$TMPDIR|/no-such-path|g\\\"\\ndone\\n\\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 '{}' +\\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/qsrcavmq4n88v1pw7irl2h6zak2fgb96-libxcrypt-4.4.38 '{}' +\\n\\n# Make the sysconfigdata module accessible on PYTHONPATH\\n# This allows build Python to import host Python's sysconfigdata\\nmkdir -p \\\"$out/lib/python3.12/site-packages\\\"\\nln -s \\\"$out/lib/python3.12/\\\"_sysconfigdata*.py \\\"$out/lib/python3.12/site-packages/\\\"\\nrm -R $out/bin/python*-config $out/lib/python*/config-*\\n# Strip IDLE (and turtledemo, which uses it)\\nrm -R $out/bin/idle* $out/lib/python*/{idlelib,turtledemo}\\nrm -R $out/lib/python*/tkinter\\n# Strip tests\\nrm -R $out/lib/python*/test $out/lib/python*/**/test{,s}\\n# Determinism: deterministic bytecode\\n# First we delete all old bytecode.\\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \\\"{}\\\"\\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\\n# interpretable by whatever python the gdb in question is using, which may\\n# not even match the major version of this python. doing this after the\\n# bytecode compilations for the same reason - we don't want bytecode generated.\\nmkdir -p $out/share/gdb\\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\\n\\n# Disable system-wide pip installation. See https://peps.python.org/pep-0668/.\\ncat <<'EXTERNALLY_MANAGED' > $out/lib/python3.12/EXTERNALLY-MANAGED\\n[externally-managed]\\nError=This command has been disabled as it tries to modify the immutable\\n `/nix/store` filesystem.\\n\\n To use Python with Nix and nixpkgs, have a look at the online documentation:\\n <https://nixos.org/manual/nixpkgs/stable/#python>.\\nEXTERNALLY_MANAGED\\n\"),(\"postPatch\",\"substituteInPlace Lib/subprocess.py \\\\\\n  --replace-fail \\\"'/bin/sh'\\\" \\\"'/nix/store/194dvh3j21mqqmjyb1n18ryz5nxrpdyg-bash-5.2p37/bin/sh'\\\"\\n\"),(\"preConfigure\",\"# Attempt to purify some of the host info collection\\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' config.guess\\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' configure\\n# Also override the auto-detection in `configure`.\\nsubstituteInPlace configure \\\\\\n  --replace-fail 'libmpdec_machine=universal' 'libmpdec_machine=x64'\\nexport CFLAGS_NODIST=\\\"-fno-semantic-interposition\\\"\\n\"),(\"preFixup\",\"\"),(\"prePatch\",\"\"),(\"propagatedBuildInputs\",\"\"),(\"propagatedNativeBuildInputs\",\"\"),(\"separateDebugInfo\",\"1\"),(\"setupHook\",\"/nix/store/awkhak3aji03f4b7zjwr8bvxpjmssk8z-python-setup-hook.sh\"),(\"src\",\"/nix/store/qs2mgbhxmvqwh5b8n14jc01z7a5yblw7-Python-3.12.9.tar.xz\"),(\"stdenv\",\"/nix/store/rklszg02jj66c50bdpawf1ipap5bkxkh-bootstrap-stage2-stdenv-linux\"),(\"strictDeps\",\"1\"),(\"system\",\"x86_64-linux\"),(\"version\",\"3.12.9\")])"}},"out":{"castore-entry":{"debug":"CiUSIJX3l2ETaiOm6CJlaRKjXqc6jG0gGYQi9cCJIp2UXJoQGJoD","out":"CiUSIO0YWpOZuHekre4B9u6kWxL0e1mEpMNZGyLTWN67mZ0nGJgP"},"nix":{"debug":{"hashAlgo":"r:sha256","path":"/nix/store/rb1c32dwc5lar4qijjkacbr3ynyv6z1r-python3-minimal-3.12.9-debug","hash":"sha256:0hcg08z1692gsvihccwyc4vikxmb78n62w1i9c1jxwpy3nqwr7zw"},"out":{"hashAlgo":"r:sha256","path":"/nix/store/m5590lsq9dnqdvb771ja6wa72cnpcmnn-python3-minimal-3.12.9","hash":"sha256:1qq6dx2jz3g96g04hzf3kvj3hyh56vmf5ki6dwpcdlcr8paq1ybr"}}},"builder":{"rebuild_id":3781809859,"store_root":"/nix/store","nix_flavor":"lix","nix_version":"2.91.1"}}.WLzdUzhKEU45NkAOdtf2Zm3WX4RtvNLu7OQwrbv1tSmutdYY4F4uIV1Ufjril7SOVnYlOw8b3hgofj8jINbeDA"
  ]
}
